1. Configure Jenkins server as Ansible provisioning machine
Use Terra form to create AWS servers.  1 for jenkins, 1 for web-servers
wget https://releases.hashicorp.com/terraform/0.15.0/terraform_0.15.0_linux_amd64.zip
unzip terraform_0.15.0_linux_amd64.zip 
sudo mv terraform /usr/bin/terraform

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install


#Create directory
mkdir ~/end1
cd ~/end1
touch main.tf
touch variables.tf
touch output.tf

#Modify main.tf - Code stored in http://github.com/MavSoccer1417/CfgMgmt_Infra
  #Create Security Groups
  #Install jenkins, ansible, maven, git
#modify variables.tf
  #create port list ingress rule
#modify output.tf
  #create ssh key output
  
#Configure Credentials
mkdir ~/.aws
cat << EOF >> ~/.aws/credentials
[default]
  aws_access_key_id = <REPLACE ACCESS_KEY>                               
  aws_secret_access_key = <REPLACE SECRET_KEY>
  aws_session_token = <REPLACE SESSION_TOKEN >
EOF
cat << EOF >> ~/.aws/config
[default]
  region=us-east-1
  output=json
EOF
  
terraform init
terraform plan
terraform apply

  
2. Install Ansible plugins in Jenkins CI server
#Log into Jenkins
#Install Maven, ansible plugins
#Create Maven Job to build war file and run ansisble install_war.yml
#

3. Prepare Ansible playbook to run Maven build on Jenkins CI server
  Ansible will kick off jenkins build
4. Prepare Ansible playbook to execute deployment steps on the remote web container with restart of the web container post deployment
edit /etc/ansible/hosts and add web-server
Create apache2.yaml to install apache on web-server
ansible-playbook apache2.yml
Create install_war.yml to update war and restart
